##
## BEGINNING OF:
## AUDIT AND ACCOUNTABILITY
##

- control_key: AU-1
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''

- control_key: AU-2
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''

- control_key: AU-3
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: complete
  narrative:
    - text: |
        'By default Ansible Tower generates audit records containing
        information that establishes what type of event occured,
        when the event occured, where the event occured, the source
        of the event, the outcome of the event, and the identity
        of individuals or subjects associated with the event.

        Ansible Tower cannot be configured to be out of compliance
        with this control.

        A sample audit record is provided below.

        TYPE OF EVENT:
        The "operation" field identifies the type of event recorded.
        In this case, a new user was created.

        WHEN THE EVENT OCCURED:
        The "timestamp" field indicates the system time of
        when the event occured. In this example the event happened
        at 2018-06-19T00:46:45.337458Z.

        WHERE THE EVENT OCCURED:
        The "X-API-Node" field indicates where the event occured. In
        this example, the host was tower.redhatgov.io.
        
        SOURCE OF EVENT:
        The "actor" field indicates the "alice" username initiated
        this event.

        OUTCOME OF EVENT:
        The "changes" field indicate the user was created with
        associated metadata such as first_name and last_name.

        IDENTITY OF INDIVIDUALS/OBJECTS INVOLVED:
        The "summary_fields" indicates an actor with the username "alice"
        created a new user with the username "bob."



        ---
             HTTP 200 OK
             Allow: GET, HEAD, OPTIONS
             Content-Type: application/json
             Vary: Accept
             X-API-Node: tower.redhatgov.io
             X-API-Time: 0.739s
             ....
             {
                 "id": 25,
                 "type": "activity_stream",
                 "url": "/api/v1/activity_stream/25/",
                 "related": {
                     "user": [
                         "/api/v1/users/4/"
                     ],
                     "actor": "/api/v1/users/1/"
                 },
                 "summary_fields": {
                     "user": [
                         {
                             "username": "bob",
                             "first_name": "Bob",
                             "last_name": "Ross",
                             "id": 4
                         }
                     ],
                     "actor": {
                         "username": "alice",
                         "first_name": "Alice",
                         "last_name": "Liddel",
                         "id": 1
                     }
                 },
                 "timestamp": "2018-06-19T00:46:45.337458Z",
                 "operation": "create",
                 "changes": {
                     "username": "bob",
                     "first_name": "Bob",
                     "last_name": "Ross",
                     "is_active": true,
                     "id": 4,
                     "is_superuser": false,
                     "is_staff": false,
                     "password": "hidden",
                     "email": "bob@ross.com",
                     "date_joined": "2018-06-19 00:46:45.314590+00:00"
                 },
                 "object1": "user",
                 "object2": "",
                 "object_association": ""
             }
        ---'

- control_key: AU-4
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''

- control_key: AU-5
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: planned
  narrative:
    - key: a
      text: |
        'Ansible Tower does not currently have the capability to notify
        administrators in the event of an audit processing failure. This
        feature is being tracked in BugZilla:

        https://github.com/ComplianceAsCode/redhat/issues/341'
    - key: b
      text: |
        'Ansible Tower does not currently have the capability to take
        an organizationally-defined action of shut down, overwrite,
        or halting audit record generation. This feature is being
        tracked in BugZilla:

        https://github.com/ComplianceAsCode/redhat/issues/342'

- control_key: AU-6
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''

- control_key: AU-8
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: complete
  narrative:
    - key: a
      text: |
        'Ansible Tower relies on the time services
        provided by the underlying operating system. Utilization of
        platform-provided time services is default, non-configurable
        behavior.'

    - key: b
      text: |
        'Ansible Tower utilizes the time zone settings of the underlying
        operating system. This is default, non-configurable behavior.'

- control_key: AU-9
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: planned
  narrative:
    - text: |
        'Ansible Tower logs are kept on the underlying operating system.
        Administrative access to the underlying operating system must be
        explicitly granted to view Ansible Tower logs.

        The ability to protect embedded log data is being tracked
        on GitHub:

        https://github.com/ComplianceAsCode/redhat/issues/343'

- control_key: AU-11
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: planned
  narrative:
    - text: |
        'Ansible Tower currently does not have the capability to
        retain audit records for an organizationally-defined time period.

        This capability is being tracked on GitHub:
        http://ssptool.securitycentral.io/certifications/FedRAMP-low/NIST-800-53/AU-11'

- control_key: AU-12
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: planned
  narrative:
    - key: a
      text: |
        'The following BugZillas track feature creation for Ansible Tower
        to audit certain events:

        - Audit Logons (Success and Failure):
        https://github.com/ComplianceAsCode/redhat/issues/345

        - Audit Logoff (Success and Failure):
        https://github.com/ComplianceAsCode/redhat/issues/346

        - Audit File & Object Creation (Success and Failure):
        https://github.com/ComplianceAsCode/redhat/issues/347

        - Audit File & Object Access (Success and Failure):
        https://github.com/ComplianceAsCode/redhat/issues/348

        - Audit File & Object Deletion (Success and Failure):
        https://github.com/ComplianceAsCode/redhat/issues/349

        - Audit File & Object Modification (Success and Failure):
        https://github.com/ComplianceAsCode/redhat/issues/350

        - Audit File & Object Permission Changes (Success and Failure):
        https://github.com/ComplianceAsCode/redhat/issues/351

        - Audit File & Object Ownership Modifications (Success and Failure):
        https://github.com/ComplianceAsCode/redhat/issues/352

        - Audit User & Group Management Events, User add (Success and Failure):
        https://github.com/ComplianceAsCode/redhat/issues/448

        - Audit User & Group Management Events, User delete (Success and Failure):
        https://github.com/ComplianceAsCode/redhat/issues/449

        - Audit User & Group Management Events, User modify (Success and Failure):
        https://github.com/ComplianceAsCode/redhat/issues/450

        - Audit User & Group Management Events, User suspend (Success and Failure):
        https://github.com/ComplianceAsCode/redhat/issues/451

        - Audit User & Group Management Events, User lock (Success and Failure):
        https://github.com/ComplianceAsCode/redhat/issues/452

        - Audit User & Group Management Events, Group/Role add (Success and Failure):
        https://github.com/ComplianceAsCode/redhat/issues/453

        - Audit User & Group Management Events, Group/Role delete (Success and Failure):
        https://github.com/ComplianceAsCode/redhat/issues/454

        - Audit User & Group Management Events, Group/Role modify (Success and Failure):
        https://github.com/ComplianceAsCode/redhat/issues/455

        - Audit Use of Privileged/Special Rights, security or policy changes (Success and Failure):
        https://github.com/ComplianceAsCode/redhat/issues/456

        - Audit Use of Privileged/Special Rights, configuration changes (Success and Failure):
        https://github.com/ComplianceAsCode/redhat/issues/457

        - Audit Use of Privileged/Special Rights, Admin or root-level access (Success and Failure):
        https://github.com/ComplianceAsCode/redhat/issues/458

        - Audit Privilege/Role Escalation (Success and Failure):
        https://github.com/ComplianceAsCode/redhat/issues/459

        - Audit and Log Data Access (Success and Failure):
        https://github.com/ComplianceAsCode/redhat/issues/460

        - Export of Information (Success and Failure):
        https://github.com/ComplianceAsCode/redhat/issues/461

        - Import of Information (Success and Failure):
        https://github.com/ComplianceAsCode/redhat/issues/462'
    - key: b
      text: |
        'Customers are required to allow defined personnel or roles to select
        which auditable events are to be audited by specific components of the
        information system. A successful control response will discuss how
        audit generation is implemented, and who selects and configures
        auditable events on the information system. Approved personnel or
        roles are defined in AU-9(4).

        Documentation/guidance on satisfying this control is being
        tracked on GitHub:

        https://github.com/ComplianceAsCode/redhat/issues/296'
    - key: c
      text: |
        'Customers are required to generate audit records for the events
        defined in AU-2d with the content defined in AU-3. A successful control
        response will discuss how audit records are generated, and how they meet
        the requirements defined in AU-2 and AU-3.

        Documentation/guidance on satisfying this control is being
        tracked on GitHub:

        https://github.com/ComplianceAsCode/redhat/issues/297'
