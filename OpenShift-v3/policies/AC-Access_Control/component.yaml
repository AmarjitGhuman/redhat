documentation_complete: false
name: Access Control
schema_version: 3.0.0
satisfies:

- control_key: AC-1
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: Not applicable
  narrative:
    - key: a
      text: |
        '
        test first paragraph

        <The customer will be responsible for developing, documenting, and 
        disseminating Access Control policy and procedures. A successful
        control response will need to address the content of the policy
        (which must include purpose, scope, roles, responsibilities,
        management committment, coordination, and compliance) and 
        procedures (which must facilitate the implimentation of the policies
        and associated controls).>

        <Adding, or binding, a role to users or groups gives the user or
        group the relevant access granted by the role. OpenShift administrators
        can add and remove roles to and from users and groups using OpenShift
        commands. Documentation for the management of OpenShift Role Bindings
        can be found at: 

        https://docs.openshift.com/container-platform/latest/admin_guide/manage_authorization_policy.html#managing-role-bindings>
        '

    - key: b
      text: |
        '<The customer will be responsible for reviewing and updating the
         Access Control policy every 3 years, and procedures annually. A
        successful control response will need to address and review and
        update process, including the role(s) responsible for initiating
        the review process, updating the policy and procedures, and
        providing approval of the updates.>'

- control_key: AC-2
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: Not applicable
  narrative:
     - key: a
       text: |
         '<The customer will be responsible for identifying and selecting the
         types of accounts required to support the customer application.
         Examples of account types include individual, shared, group,
         system, guest/annonymous, emergency, developer/manufacturer/vendor,
         temporary, and service. A successful control response will need to
         address the specific requirements fulfulled by each account type
         in use.'

- control_key: AC-2 (1)
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: Not applicable
  narrative:
   - text: |
        3rd party software must be used to fully support automated management of OpenShift accounts.

        Documentation on authentication configuration options exposed in OpenShift can be found here:
        https://docs.openshift.com/container-platform/3.3/architecture/additional_concepts/authentication.html

- control_key: AC-2 (2)
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: Not applicable
  narrative:
   - text: |
        3rd party software must be used to fully support management of temporary and emergency accounts.

        OpenShift does not have the capability to automatically disable accounts after a configured period of time.
        To meet this requirement, an authentication provider (such as Active Directory) must be used. Integration
        between OpenShift and Active Directory can be accomplished through the use of Kerberos cross-realm trusts.
        Refer to the LDAP Authentication section of the OpenShift Administrators guide:

        https://docs.openshift.com/container-platform/3.3/admin_solutions/authentication.html#ldap-auth

- control_key: AC-2 (3)
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: none
  narrative:
   - text: |
        3rd party software must be used to fully support automatic disablement of inactive accounts.

        OpenShift does not have the capability to automatically disable accounts after a configured 
        period of time. To meet this requirement, an authentication provider (such as Active Directory) must be used.
        Integration between OpenShift and Active Directory can be accomplished throguh the use of Kerberos cross-realm
        trusts. Refer to the LDAP Authentication section of the OpenShift Administrators guide:

        https://docs.openshift.com/container-platform/3.3/admin_solutions/authentication.html#ldap-auth

- control_key: AC-2 (4)
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: Implemented
  narrative:
   - text: |
        OpenShift will log events to standardized files, however automatic notification (outside of generating
        audit data) is not possible. As an OpenShift Container Platform cluster administrator, you can deploy
        the EFK stack to aggregate logs for a range of OpenShift Container Platform services and setup alerting.
        Application developers can view the logs of the projects for which they have view access. The EFK stack
        aggregates logs from hosts and applications, whether coming from multiple containers or even deleted pods.
        For documentation on how to setup Elasticsearch, Fluentd, and Kibana, refer to the Aggregate Logging" section
        of the OpenShift Installation and Configuration Guide:

        https://docs.openshift.com/container-platform/3.3/install_config/aggregate_logging.html

- control_key: AC-2 (5)
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: Implemented
  narrative:
   - text: |
        The sessionMaxAgeSeconds variable in the master-config.yaml file controls when/if users must logout
        after a period of inactivity.

- control_key: AC-2 (7)
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: Implimented
  narrative:
   - text: |
        Adding, or binding, a role to users or groups give the user or group the relevant access granted by
        the role. You can add and remove roles to and from users and groups using OpenShift commands.
        Documentation for the management of Role Bindings can be found at:

        https://docs.openshift.com/container-platform/latest/admin_guide/manage_authorization_policy.html#managing-role-bindings

- control_key: AC-2 (9)
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: Implemented
  narrative:
   - text: |
        By default, OpenShift does not support group authenticators. OpenShift does provide a role-based access control
        (RBAC) mechanism and user identity metadata, including group membership. Identity and RBAC controls are enforced
        against all user (privileged and non) actions and resources. RBAC access controls can be applied to provide
        access to resources by individual users or groups of users. Groups are typically configured in accordance with
        Section 3.4, Managing User and Grup Labels in OpenShift's Cluster Administration Guide:

        https://docs.openshift.com/container-platform/3.3/admin_guide/manage_users.html#managing-users-managing-user-and-group-labels

- control_key: AC-2 (10)
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: none
  narrative:
   - text: |
        Narrative text on how product can be configured against AC-2 (10) goes here.

        This answer can be multi-line.

- control_key: AC-2 (12)
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: none
  narrative:
   - text: |
        Narrative text on how product can be configured against AC-2 (12) goes here.

        This answer can be multi-line.

- control_key: AC-3
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: none
  narrative:
   - text: |
        Narrative text on how product can be configured against AC-3 goes here.

        This answer can be multi-line.

- control_key: AC-4
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: none
  narrative:
   - text: |
        Narrative text on how product can be configured against AC-4 goes here.

        This answer can be multi-line.

- control_key: AC-4 (21)
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: none
  narrative:
   - text: |
        Narrative text on how product can be configured against AC-4 (21) goes here.

        This answer can be multi-line.

- control_key: AC-5
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: none
  narrative:
   - text: |
        Narrative text on how product can be configured against AC-5 goes here.

        This answer can be multi-line.

- control_key: AC-6
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: none
  narrative:
   - text: |
        Narrative text on how product can be configured against AC-6 goes here.

        This answer can be multi-line.

- control_key: AC-6 (1)
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: none
  narrative:
   - text: |
        Narrative text on how product can be configured against AC-6 (1) goes here.

        This answer can be multi-line.

- control_key: AC-6 (2)
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: none
  narrative:
   - text: |
        Narrative text on how product can be configured against AC-6 (2) goes here.

        This answer can be multi-line.

- control_key: AC-6 (5)
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: none
  narrative:
   - text: |
        Narrative text on how product can be configured against AC-6 (5) goes here.

        This answer can be multi-line.

- control_key: AC-6 (9)
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: none
  narrative:
   - text: |
        Narrative text on how product can be configured against AC-6 (9) goes here.

        This answer can be multi-line.

- control_key: AC-6 (10)
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: none
  narrative:
   - text: |
        Narrative text on how product can be configured against AC-6 (10) goes here.

        This answer can be multi-line.

- control_key: AC-7
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: none
  narrative:
   - text: |
        Narrative text on how product can be configured against AC-7 goes here.

        This answer can be multi-line.

- control_key: AC-8
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: none
  narrative:
   - text: |
        Narrative text on how product can be configured against AC-8 goes here.

        This answer can be multi-line.

- control_key: AC-10
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: none
  narrative:
   - text: |
        Narrative text on how product can be configured against AC-10 goes here.

        This answer can be multi-line.

- control_key: AC-11
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: none
  narrative:
   - text: |
        Narrative text on how product can be configured against AC-11 goes here.

        This answer can be multi-line.

- control_key: AC-11 (1)
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: none
  narrative:
   - text: |
        Narrative text on how product can be configured against AC-11 (1) goes here.

        This answer can be multi-line.

- control_key: AC-12
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: none
  narrative:
   - text: |
        Narrative text on how product can be configured against AC-12 goes here.

        This answer can be multi-line.

- control_key: AC-14
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: none
  narrative:
   - text: |
        Narrative text on how product can be configured against AC-14 goes here.

        This answer can be multi-line.

- control_key: AC-17
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: none
  narrative:
   - text: |
        Narrative text on how product can be configured against AC-17 goes here.

        This answer can be multi-line.

- control_key: AC-17 (1)
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: none
  narrative:
   - text: |
        Narrative text on how product can be configured against AC-17 (1) goes here.

        This answer can be multi-line.

- control_key: AC-17 (2)
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: none
  narrative:
   - text: |
        Narrative text on how product can be configured against AC-17 (2) goes here.

        This answer can be multi-line.

- control_key: AC-17 (3)
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: none
  narrative:
   - text: |
        Narrative text on how product can be configured against AC-17 (3) goes here.

        This answer can be multi-line.

- control_key: AC-17 (4)
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: none
  narrative:
   - text: |
        Narrative text on how product can be configured against AC-17 (4) goes here.

        This answer can be multi-line.

- control_key: AC-17 (9)
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: none
  narrative:
   - text: |
        Narrative text on how product can be configured against AC-17 (9) goes here.

        This answer can be multi-line.

- control_key: AC-18
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: none
  narrative:
   - text: |
        Narrative text on how product can be configured against AC-18 goes here.

        This answer can be multi-line.

- control_key: AC-18 (1)
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: none
  narrative:
   - text: |
        Narrative text on how product can be configured against AC-18 (1) goes here.

        This answer can be multi-line.

- control_key: AC-19
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: none
  narrative:
   - text: |
        Narrative text on how product can be configured against AC-19 goes here.

        This answer can be multi-line.

- control_key: AC-19 (5)
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: none
  narrative:
   - text: |
        Narrative text on how product can be configured against AC-19 (5) goes here.

        This answer can be multi-line.

- control_key: AC-20
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: none
  narrative:
   - text: |
        Narrative text on how product can be configured against AC-20 goes here.

        This answer can be multi-line.

- control_key: AC-20 (1)
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: none
  narrative:
   - text: |
        Narrative text on how product can be configured against AC-20 (1) goes here.

        This answer can be multi-line.

- control_key: AC-20 (2)
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: none
  narrative:
   - text: |
        Narrative text on how product can be configured against AC-20 (2) goes here.

        This answer can be multi-line.

- control_key: AC-21
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: none
  narrative:
   - text: |
        Narrative text on how product can be configured against AC-21 goes here.

        This answer can be multi-line.

- control_key: AC-22
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: none
  narrative:
   - text: |
        Narrative text on how product can be configured against AC-22 goes here.

        This answer can be multi-line.
