---
documentation_complete: false
name: System and Information Integrity
schema_version: 3.0.0
satisfies:

- control_key: SI-1
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: none
  narrative:
    - key: a
      text: |
        '//*
        The customer will be responsible for developing, documenting, and
        disseminating System and Information Integrity policy and procedures. A
        successful control response will need to address the content of the
        policy (which must include purpose, scope, roles, responsibilities,
        management commitment, coordination, and compliance) and procedures
        (which must facilitate the implementation of the policies and
        associated controls).
        */'
    - key: b
      text: |
        '//*
        The customer will be responsible for reviewing and updating the
        System and Information Integrity policy every 3 years, and procedures
        annually. A successful control response will need to address the
        review and update process, including the role(s) responsible for
        initiating the review process, updating the policy and procedures,
        and providing approval of the updates.
        */'

- control_key: SI-2
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: none
  narrative:
    - key: a
      text: |
        '//*
        The customer will be responsible for analyzing their applications for
        flaws, reporting on those flaws, and correcting them. A successful
        control response will include a discussion of the process by which
        flaws are discovered and remediated, as well as tools that are used to
        assist in detection and remediation.
        */'
    - key: b
      text: |
        '//*
        The customer will be responsible for testing application updates
        related to flaw remediation prior to installation. A successful control
        response will discuss the testing process (e.g. the nature of the test
        environment, the types of testing performed, the tools in testing,
        etc.).
        */'
    - key: c
      text: |
        '//*
        The customer will be responsible for installing security-relevant
        software updates to their application within 30 days of the release of
        those updates. A successful control response will detail how the
        customer ensures that this update schedule can be met while still
        performing sufficient testing.
        */'
    - key: d
      text: |
        '//*
        The customer will be responsible for incorporating flaw remediation
        activities into their organizational configuration management process.
        A successful control response will address how flaws are categorized
        in terms of the types of changes that are subject to configuration
        management, as well as the approval process for remediation activities
        (see the CM family of controls).
        */'


- control_key: SI-2 (2)
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: none
  narrative:
    - text: |
        '//*
        The customer will be required to employ automated mechanisms on a
        monthly basis to determine the stat of information system components
        with regard to flaw remediation on their information systems as required
        by their organizations policy. A successful control response will
        address the customers use of automated tools such as Nessus to
        perform periodic and on-demand scans through their system to determine
        the state of system components with regard to flaw remediation.
        */'

- control_key: SI-2 (3)
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: none
  narrative:
    - key: a
      text: |
        '//*
        The customer is responsible for scanning for flaws in their
        information systems and for measuring the time between flaw
        identification and flaw remediation. A successful control response will
        need to address the time between flaw identification and remediation
        using timestamps and calculates the time elapsed difference.
        */'
    - key: b
      text: |
        '//*
        The customer will be responsible for scanning for flaws in their
        information systems and for establishing benchmarks for taking
        correctie actions according to their organizational policies. A
        successful control response will need to address the use of
        benchmarks to remediate high, and moderate risk flaws within a cusotmer
        defined period after a flaws discovery.
        */'

- control_key: SI-3
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: none
  narrative:
    - key: a
      text: |
        '//*
        The customer is responsible for ensuring that they employ malicious
        code protection at information system entry, and exit points to detect
        and eradicate malicious code. A successful control response will need
        to address use of code protection mechanisms to protect assets from
        malicious software (i.e. Viruses, malware, rootkits, worms, and
        scripts).
        */'
    - key: b
      text: |
        '//*
        The customer is responsible for ensuring that they update their
        malicious code protection mechanisms whenever new releases are available
        in accordance with organizational configuration management policy and
        procedures. A successful control response will need to address that
        the protection mechanisms stated in Part A of this control are updated
        when a new version or definition release becomes available.
        */'
    - key: c
      text: |
        '//*
        The customer is responsible for ensuring that their malicious code
        protection mechanisms will perform periodic scans on a weekly basis. The
        customer will perform realtime scans of files from all external sources,
        including endpoints as the files are downloaded, opened, or executed
        in accordance with organizational security policy. The customer will
        also send alerts to an administrator or another defined security
        personnel in response to detected malicious code.
        */'
    - key: d
      text: |
        '//*
        The customer is responsible for addressing the receipt of false
        positives during malicious code detection and eradication. These false
        positives will report potnetial impact of the availability of the
        information system. A successful control response will detail the steps
        taken when false positives are detected within the system with the
        resulting impact of availability to the information system.
        */'

- control_key: SI-3 (1)
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: none
  narrative:
    - text: |
        '//*
        The customer is responsible for ensuring that their malicious code
        protection mechanisms are centrally managed. A successful control
        response will need to address that the planning, implementing,
        assessing, authorizing and monitoring of their malicious code protection
        mechanism is centered in one location.
        */'

- control_key: SI-3 (2)
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: none
  narrative:
    - text: |
        '//*
        The customer is responsible for ensuring that they update their
        malicious code protection mechanisms automatically when new versions/
        definitions become available. A successful control response will need
        to address that the employed malicious code protection
        mechanisms definitions are configured to be updated automatically.
        */'

- control_key: SI-3 (7)
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: none
  narrative:
    - text: |
        '//*
        The customer is responsible for ensuring that they implement a
        nonsignature-based malicious code detection mechanism on their
        information system. A successful control response will need to address
        a nonsignature based detection mechanism that can detect, analyze and
        describe the characteristics or behavior of malicious code and
        could provide safeguards against malicious code for which signatures
        do not yet exist.
        */'

- control_key: SI-4
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: none
  narrative:
    - key: a
      text: |
        '//*
        The customer will be responsible for meeting the FedRAMP-defined
        monitoring objective of ensuring the proper functioning of internal
        processes and controls in furtherance of regulatory and compliance
        requirements; examine system records to confirm that the system
        is functioning in an optimal, resilient, and secure state; identify
        irregularities or anomalies that are indicators of a system malfunction
        or compromise. It is common for network service providers to impliment
        this control on behalf of infrastructure components. A successful
        control response must articulate how  both technology and process is
        used to identify attacks and indicators of potential attacks.
        */'
    - key: b
      text: |
        '//*
        The customer will be responsible for monitoring local, network, and
        remote connections. In modern IT systems, it is common for all
        connection types to be classified as remote. A successful control
        response will indicate if all connections are considered remote, and if
        not, how each category is uniquely monitored.
        */'
    - key: c
      text: |
        '//*
        The customer is responsible for deploying monitoring devices at
        strategic and ad-hoc locations within the system. A successful control
        response will identify the locations where monitoring devices will be
        implimented. It is common for network service providers to implement
        this control on behalf of tenants.
        */'
    - key: d
      text: |
        '//*
        The customer will be responsible for protecting information obtained
        from intrusion-monitoring tools from unauthorized access, modification,
        and deletion. A successful control response will indicate data access
        and management processes to ensure protection of the gathered data. It
        is common for network service providers to implement this control
        on behalf of tenants.
        */'
    - key: e
      text: |
        '//*
        The information system must be capable of heightening the level of
        monitoring during times of duress. A successful control response
        will indicate increasing tiers of monitoring and analysis that is
        available should a known, or suspected, attack occur. It is common
        for network service providers to implement this control on behalf
        of tenants. For example, Microsoft Azure for Government implements
        this control on behalf of their IaaS users.
        */'
    - key: g
      text: |
        '//*
        The customer will be responsible to ensure monitoring is aligned with
        SI-4(a), that organizationally defined personnel or roles receive
        monitoring information daily (and with capabilities for ondemand
        inquiries). A successful control response will address the reporting
        available to appropriate staff, and how on-demand reports can be
        created. It is common for network service providers to implement this
        control on behalf of tenants.
        */'

- control_key: SI-4 (1)
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: none
  narrative:
    - text: |
        '//*
        The customer will be responsible for integrating intrusion detection
        tools into the OpenShift environment, and documenting how this
        capability is integrated into enterprise-wide intrusion detection
        systems when applicable. A successful control response will address
        the workflow between local and enterprise intrusion detection
        systems.
        */'

- control_key: SI-4 (2)
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: none
  narrative:
    - text: |
        '//*
        The customer will be responsible for deploying automated tools to
        support near real-time analysis of events in their infrastructure. This
        is frequently provided by corporate services outside the informarion
        system, e.g. centralized security operation centers may host an
        enterprise logging solution. A successful control response will
        indicate who is responsible for hosting such capabilities, and what
        technology and processes are in place to support near-realtime
        analysis of events.
        */'

- control_key: SI-4 (4)
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: none
  narrative:
    - text: |
        '//*
        The customer will be responsible for identifying how and where
        network traffic is continuously monitored. Frequently this control
        is inherited from network and Infrastructure as a Service providers,
        such as Microsoft Azure. A successful control response will indicate
        if this control is inherited from infrastructure providers, and if not,
        how network traffic is continuously monitored.
        */'

- control_key: SI-4 (5)
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: none
  narrative:
    - text: |
        '//*
        The customer will be responsible for automatic notification of
        appropriate staff when indicators of compromise are detected. Frequently
        this is accomplished by automatic alerting to Security Operations Center
        staff. A successful control response will indicate who is notified, by
        name or position title(s), and the mechanism of the notification.
        */'

- control_key: SI-4 (14)
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: none
  narrative:
    - text: |
        'An OpenShift infrastructure does not have wireless capabilities. This
        control is Not Applicable.
        */'

- control_key: SI-4 (16)
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: none
  narrative:
    - text: |
        '//*
        The customer will be responsible for aggregating and correlating
        information from monitoring tools, for multiple system components. This
        is frequently accomplished with centralized audit reduction tools.
        */'

- control_key: SI-4 (23)
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: none
  narrative:
    - text: |
        '//*
        The customer will be responsible for installing host-based monitoring
        mechanisms. A successful control response will need to discuss how
        various elements of the OpenShift infrastructure are monitored.
        */'

- control_key: SI-5
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: none
  narrative:
    - key: a
      text: |
        '//*
        The customer will be responsible for recieving relevant security
        alerts, advisories and directives. A successful control response will
        need to discuss the external sources of security alerts, advisories, and
        directives (including US-CERT as required by FedRAMP.
        */'
    - key: b
      text: |
        '//*
        The customer will be responsible for generatign internal security
        alerts, advisories and directives. A successful control response will
        need to address the criteria used to determine what alerts, advisories,
        and directives are necessary, based on the specifics of the customer
        mission, software, or service.
        */'
    - key: c
      text: |
        '//*
        The customer will be responsible for disseminating security alerts,
        advisories and directives within the customer organization and to
        external organizations as necessary. A successful control response will
        need to address the personnel or roles within the organization who
        require notificiation.
        */'
    - key: d
      text: |
        '//*
        The customer will be responsible for implementing security directives
        within customer-controlled operating systems, software, and services. A
        successful control response will need to address how the organization
        meets established time frames for implementing security directives.
        */'

- control_key: SI-6
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: none
  narrative:
    - key: a
      text: |
        '//*
        The customer will be responsible for verifying the correct operation
        of security functions within customer-controlled operating systems and
        software. A successful control response will need to discuss the
        security functions deemed necessary to verify, as well as the means for
        testing the correct operation and resolving any issues found.
        */'
    - key: b
      text: |
        '//*
        The customer will be responsible for performing security function
        verification at customer-specified frequencies and under
        customer-specified circumstances (to include the requirements stated by
        FedRAMP). A successful control response will need to address the
        rationale for selection of the specific frequency and circumstances
        of security function verification.
        */'
    - key: c
      text: |
        '//*
        The customer will be responsible for notifying appropriate personnel
        of failed security verification tests. A successful control response
        will need to outline the personnel or roles selected (to include system
        administrators and security personnel as required by FedRAMP).
        */'
    - key: d
      text: |
        '//*
        The customer will be responsible for performing appropriate actions
        in response to anomalies in security unction verifiation. A successful
        control response will need to discuss the actions taken (to include
        notification of system administrators and security personnel as required
        by FedRAMP) as well as the rationale for selecting these actions.
        */'

- control_key: SI-7
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: none
  narrative:
    - text: |
        '//*
        The customer will be responsible for employing integrity verification
        tools for customer-controlled operating systems and software. A
        successful control response will need to discuss the tools in use and
        the integrity-checking mechanisms these tools employ.
        */'

- control_key: SI-7 (1)
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: none
  narrative:
    - text: |
        '//*
        The customer will be responsible for performing integrity checks at
        customer-specific frequencies and under customer-specified
        circumstances (including frequencies and circumstances specified by
        FedRAMP). A successful control response will need to identify the
        criteria for performing integrity checking, as well as the rationale
        for selecting those criteria.
        */'

- control_key: SI-7 (7)
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: none
  narrative:
    - text: |
        '//*
        The customer will be responsible for incorporating the detection of
        customer-defined security-relevant changes into the customers incident
        response capability. A successful control response will need to outline
        the process for deeming particular changes as security-relevant and the
        means by which the incident response capability is invoked when
        needed.
        */'

- control_key: SI-8
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: none
  narrative:
    - key: a
      text: |
        'OpenShift does not provide customer-routable mail servers, thus spam
        protection is not applicable.'

- control_key: SI-8 (1)
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: none
  narrative:
    - text: |
        'OpenShift does not provide customer-routable mail servers, thus spam
        protection is not applicable.'

- control_key: SI-8 (2)
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: none
  narrative:
    - text: |
        'OpenShift does not provide customer-routable mail servers, thus spam
        protection is not applicable.'

- control_key: SI-10
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: none
  narrative:
    - text: |
        '//*
        The customer will be responsible for checking the validity of
        information inputs to customer-controlled operating systems and
        software. A successful control response will need to discuss the
        specific inputs for which the validity is checked, the rationale
        for selecting those inputs for validity checking, and the response
        taken by the system to invalid inputs.
        */'

- control_key: SI-11
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: none
  narrative:
    - key: a
      text: |
        '//*
        The customer will be responsible for generating error messages in
        cusomer-controlled operating systems and software that provide
        information necessary for corrective actions without revealing
        information that could be exploited by adversaries. A successful
        control response will need to discuss the process by which error
        messages are created, analyzed, and corrected when necessary.
        */'
    - key: b
      text: |
        '//*
        The customer will be responsible for revealing error messages only to
        authorized personnel. A successful control response will need to
        address how error messages are displayed and the means by which access
        to error messages is controlled.
        */'

- control_key: SI-12
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: none
  narrative:
    - text: |
        '//*
        The customer will be responsible for handling and retaining
        information within customer-enrolled  systems and software in accordance
        with applicable federal laws, Executive Orders, directives, policies,
        regulations, standards, and operational requirements. A successful
        control response will need to outline the specific requirements
        applicable to customer information handling and retention, and the
        means by which those requirements are met.
        */'

- control_key: SI-16
  standard_key: NIST-800-53
  covered_by: []
  implimentation_status: none
  narrative:
    - text: |
        '//*
        Memory and unauthorized code protection mechanisms are provided in
        the base operating system, Red Hat Enterprise Linux. This includes
        buffer overflow protection, execution of code on a process’ or
        thread’s stack, modification of a function return address on the
        process’ or threads stack to jump to previously known processor
        instructions, and modification of process section other than the
        segment that holds compile time initialized data and segment holding
        the mapping of all uninitialized variables. For the runtime instances
        of binaries, all user-provided applications and their depending
        libraries that are compiled and linked with the following properties:

        (1) presence of the ELF program header entry of PT_GNU_STACK and the
        absence of the PF_X bit in the p_flags ELF header flags;

        (2) presence of the ELF program header entry of PT_GNU_RELRO with
        memory range information covering the following ELF sections: .tdata,
        .preinit_array, .init_array, .fini_array, .ctors, .dtors, .data.rel.ro,
        .dynamic, .got including .got.plt. The secure state implied with this
        functionality covers the following aspects where the following list
        explains the implication of each bullet above:

                a) When exploiting buffer overruns of an application, the
                   attacker cannot feed code onto the stack and execute it.

                b) When exploiting buffer overruns of an application, the
                   modify of the return addresses stored on a stack jump to a
                   previously known code segment is much harder to achieve by
                   an attacker. Due to the address randomization, any memory
                   address of code already present with the application or
                   loaded libraries will be different with each startup of the
                   application.

                c) The ELF header sections listed above are set read-only using
                   the mprotect system call by the loaded before the application
                   gains control. When exploiting buffer overruns, the attacker
                   cannot modify information in those memory sections. These
                   sections store offset tables required for the dynamic linking
                   mechanism and, if abused, allow attackers to modify the jump
                   addresses of object accesses. Full protection against this
                   type of attack can only be achieved if the application and
                   all depending shared libraries are compiled linked with full
                   protection enabled. When at least one shared libraroy the
                   application depends on or the application itself is compiled
                   and linked with partial protection, only partial protection
                   against this type of attack is available for the given
                   application.

        To enforce functionality in bullet a), /proc/sys/kernel/exec-shield
        must contain either a 1 or 2.

        To enforce the functionality in bullet b),
        /proc/sys/kernel/randomize_va_space must contain a 2 (1 implies the
        address randomization is enabled except for the brk system call).

        For full documentation on common criteria evaluated memory protections,
        Red Hat publishes full common criteria paperwork online:

        https://www.redhat.com/en/technologies/industries/government/standards
        
        */'
